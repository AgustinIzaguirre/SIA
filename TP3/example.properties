# ########################################
# General settings
# ########################################
general.populationSize=2000

# Whether to read full data. 0 reads test data, 1 reads full data
general.fullData=1

# ########################################
# Character properties
# ########################################
# Character type
# 0 => Soldier
# 1 => Archer
# 2 => Defender
# 3 => Assassin
character.type = 1
# Character-wide attack and defense multipliers (NOTE: Should add up to 1)
character.attackMultiplier=0.9
character.defenseMultiplier=0.1

# Item-wide stat multipliers
character.strengthMultiplier=0.8
character.agilityMultiplier=0.8
character.expertiseMultiplier=0.8
character.resistanceMultiplier=1.1
character.healthMultiplier=1.2

# Admissible character height range
character.minHeight=1.3
character.maxHeight=2.0

# Chosen algorithm
# Admissible values: 1, 2, 3
algorithm=2

# ########################################
# SELECTION METHOD MAPPINGS
# Note: Some of these use a second selection method (eg. Ranking, Boltzmann)
# ########################################
# 1 => Elite
# 2 => Roulette
# 3 => Universal
# 4 => Deterministic tournament
# 5 => Probabilistic tournament
# 6 => Ranking
# 7 => Boltzmann

# ########################################
# Crossover settings
# ########################################

#Crossover type
# 0 => One Point Crossover
# 1 => Two Points Crossover
# 2 => Anular Crossover
# 3 => Uniform Crossover
crossover.type = 2

# Probability of crossover to occur
crossover.p=0.95

# Fraction of individuals to select for crossover with method 1. (1-A) of individuals will be selected using method 2.
crossover.selection.A=1
# Crossover selection method 1
crossover.selection.method1=2
# Second selection method for crossover selection method 1 (only used for Ranking, Boltzmann, etc.)
crossover.selection.second.method1=2
# Crossover selection method 2
crossover.selection.method2=2
# Second selection method for crossover selection method 2 (only used for Ranking, Boltzmann, etc.)
crossover.selection.second.method2=2

# Probability to cross over different alleles
crossover.uniform.p=0.9

# ########################################
# Selection settings
# ########################################

# Boltzmann temperature functions
# 1 => exponential
# 2 => inverse
# 3 => lineal
# 4 => lineal split
selection.boltzmann.tempFunction=1

# Number of individuals to pitch against each other in each tournament
selection.tournament.deterministic.m=2

# Probability to choose the fittest individual in a tournament
selection.tournament.random.p=0.75

# ########################################
# Mutation settings
# ########################################

# Mutation type
# 0 => Single Gene Mutation
# 1 => Multi Gene Mutation
mutation.type = 1

# Probability of a mutation to occur
mutation.p=0.1
# Whether mutation is uniform (same probability for all generations). 1 for uniform, 0 for non-uniform
mutation.uniform=1
# When mutation is NOT uniform (ie. mutation.uniform=0), how many generations to maintain mutation probability. After this many generations, probability may change.
mutation.uniformGenerations=3

# ########################################
# Replacement settings
# ########################################

# Fraction of individuals to copy over directly from one generation to the next in the replacement stage
replacement.generationGap=0.3

# Fraction of individuals to select for replacement with method 1. (1-B) of individuals will be selected using method 2.
replacement.selection.B=1
# Replacement selection method 1
replacement.selection.method1=2
# Second selection method for replacement selection method 1 (only used for Ranking, Boltzmann, etc.)
replacement.selection.second.method1=2
# Replacement selection method 2
replacement.selection.method2=2
# Second selection method for replacement selection method 2 (only used for Ranking, Boltzmann, etc.)
replacement.selection.second.method2=2

##########################################
# End Conditions
##########################################
# End Condition Type
# 0 => Max Generations
# 1 => Structural
# 2 => Content
# 3 => Near Optimal
# 4 => Combined
end.condition.type = 4

# Max generations for max generations end condition
max.generations = 10000

# Minimum percentage to change for structural end condition
structural.percentage = 0.00

# Number of consecutive generations for content end condition
content.consecutive.generations = 6000

# Fitness used for near optimal end condition
near.optimal.fitness = 38.129314598705854

# Delta used for near optimal end condition
near.optimal.delta = 4.0
